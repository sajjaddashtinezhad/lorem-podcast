{"version":3,"file":"component---src-pages-mdx-frontmatter-slug-js-content-file-path-content-episodes-episode-6-mdx-1c419e64e85beb12db77.js","mappings":"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","sources":["webpack://lorem-podcast/./content/episodes/episode_6.mdx","webpack://lorem-podcast/./src/pages/{mdx.frontmatter__slug}.js","webpack://lorem-podcast/./src/templates/book-template.js","webpack://lorem-podcast/./src/templates/episode-template.js","webpack://lorem-podcast/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"در این اپیزود درباره‌ی توسعه‌ی کاربرد هوش مصنوعی در گرافیک دیزاین و امتیازات و تهدیدهای آن صحبت شده است.\\nموضوعات مورد بحث در این اپیزود شامل مواردی همچون\\nجایگزینی گرافیست‌ها توسط هوش مصنوعی،\\nعلاقه و میل بنیادی انسان‌ها به آثار تولید شده توسط انسان‌ها،\\nو... مورد بحث قرار گرفتند.\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Volumes/ADATA HD770G/LoremPodcast/New website/lorem-podcast/content/episodes/episode_6.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport BookTemplate from '../templates/book-template';\nimport EpisodeTemplate from '../templates/episode-template';\nimport Seo from '../components/seo';\nconst DynamicTemplate = ({data, children}) => {\n  const {frontmatter} = data.mdx;\n  if (frontmatter.type === 'book') {\n    return React.createElement(BookTemplate, {\n      data: data,\n      children: children\n    });\n  } else if (frontmatter.type === 'episode') {\n    return React.createElement(EpisodeTemplate, {\n      data: data,\n      children: children\n    });\n  } else {\n    return null;\n  }\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        type\n        title\n        description\n        slug\n        iframe\n        hero_image {\n            childImageSharp {\n              gatsbyImageData\n            }\n        }\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title,\n  description: data.mdx.frontmatter.description\n});\nDynamicTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DynamicTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { useState } from 'react';\nimport Bottom from \"../images/bottom.svg\";\nimport Header from \"../components/header\";\nimport Menu from \"../components/menu\";\nimport Footer from \"../components/footer\";\nimport { graphql, Link } from 'gatsby'\nimport Arrow from \"../images/arrow.svg\";\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\n\n\n  const BookTemplate = ({ data, children }) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n\n    const toggleMenu = () => {\n      setMenuOpen(!menuOpen);\n    };\n\n    const components = {};\n    const image = getImage(data.mdx.frontmatter.hero_image);\n\n    return (\n        <main>\n        <div className=\"bg-zinc-900 font-peyda w-full h-svh md:h-screen p-6 md:p-16 flex flex-col md:justify-between\" dir=\"rtl\">\n        <Header toggleMenu={toggleMenu} />\n        <Menu menuOpen={menuOpen} toggleMenu={toggleMenu} />\n\n          <div className='md:h-full my-8 overflow-y-scroll rounded-xl overflow-hidden'>\n            <Link to=\"/books\">\n\n              <span className=\"text-sm md:text-base bg-zinc-700 bg-opacity-30 backdrop-filter backdrop-blur-md rounded-2xl px-4 w-28 h-[45px] items-center mb-3 hover:w-32 duration-200 font-peyda font-bold text-white inline-flex justify-between\">\n                <img src={Arrow} alt=\"Close\" className=\"w-4 -rotate-90 inline\" />\n                بازگشت\n              </span>\n            </Link>\n\n            <div className='flex-col md:flex-row-reverse flex rounded-xl bg-zinc-700 bg-opacity-30 backdrop-filter overflow-hidden'>\n              <div className='w-full md:w-1/3'>\n                <GatsbyImage\n                  image={image}\n                  alt={data.mdx.frontmatter.hero_image_alt}\n                  className='h-full'\n                />\n              </div>\n\n              <div className='w-full md:w-2/3 md:h-full overflow-y-scroll px-8 py-8 rounded-xl overflow-hidden'>\n\n                <h1 className=\"font-bold text-xl md:text-3xl mb-2 text-white\">{data.mdx.frontmatter.title}</h1>\n                <div className='text-white'>\n                  {React.Children.map(children, child => {\n                    if (React.isValidElement(child)) {\n                      return React.cloneElement(child, {\n                        components: {\n                          ...components,\n                          h1: (props) => <h1 className=\"text-4xl font-bold mt-4 mb-2\" {...props} />,\n                          h2: (props) => <h2 className=\"text-3xl font-bold mt-4 mb-2\" {...props} />,\n                          h3: (props) => <h3 className=\"text-2xl font-bold mt-4 mb-2\" {...props} />,\n                          h4: (props) => <h4 className=\"text-xl font-bold mt-4 mb-2\" {...props} />,\n                          h5: (props) => <h5 className=\"text-lg font-bold mt-4 mb-2\" {...props} />,\n                          h6: (props) => <h6 className=\"text-base font-bold mt-4 mb-2\" {...props} />,\n                          li: (props) => <li className=\"mb-2\" {...props} />,\n                          a: (props) => <a className=\"underline\" {...props} />\n                        }\n                      });\n                    }\n                    return child;\n                  })}\n\n                </div>\n\n\n              </div>\n\n            </div>\n\n\n          </div>\n\n\n\n\n\n\n        <Footer />\n        </div>\n        <div className=\"absolute bottom-0 w-full pointer-events-none\">\n          <img src={Bottom} alt=\"Bottom decoration\" className=\"w-full object-cover h-60\" />\n        </div>\n      </main>\n    )\n  }\n  \n\n  export const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}, frontmatter: { type: { eq: \"episode\" } }) {\n      frontmatter {\n        title\n        description\n        hero_image_alt\n        hero_image {\n            childImageSharp {\n              gatsbyImageData\n            }\n        }\n      }\n    }\n  }`\n  \n\n  export default BookTemplate","import React, { useState } from 'react';\nimport Bottom from \"../images/bottom.svg\";\nimport Header from \"../components/header\";\nimport Menu from \"../components/menu\";\nimport Footer from \"../components/footer\";\nimport { graphql, Link } from 'gatsby'\nimport Arrow from \"../images/arrow.svg\";\n\n\n  const EpisodeTemplate = ({ data, children }) => {\n    const [menuOpen, setMenuOpen] = useState(false);\n\n    const toggleMenu = () => {\n      setMenuOpen(!menuOpen);\n    };\n\n    const components = {};\n\n    return (\n        <main>\n        <div className=\"bg-zinc-900 font-peyda w-full h-svh md:h-screen p-6 md:p-16 flex flex-col md:justify-between\" dir=\"rtl\">\n        <Header toggleMenu={toggleMenu} />\n        <Menu menuOpen={menuOpen} toggleMenu={toggleMenu} />\n\n          <div className='md:h-[257px] my-8 overflow-y-scroll rounded-xl overflow-hidden'>\n            <Link to=\"/episodes\">\n              <span className=\"text-sm md:text-base bg-zinc-700 bg-opacity-30 backdrop-filter backdrop-blur-md rounded-2xl px-4 w-28 h-[45px] items-center mb-3 hover:w-32 duration-200 font-peyda font-bold text-white inline-flex justify-between\">\n                <img src={Arrow} alt=\"Close\" className=\"w-4 -rotate-90 inline\" />\n                بازگشت\n              </span>\n            </Link>\n\n            <div className='flex-col md:flex-row-reverse flex rounded-xl bg-zinc-700 bg-opacity-30 backdrop-filter overflow-hidden'>\n              <div className='w-full md:w-1/3'\n                dangerouslySetInnerHTML={{ __html: data.mdx.frontmatter.iframe }}\n              />\n\n              <div className='w-full md:w-2/3 md:h-[200px] overflow-y-scroll px-8 py-8 rounded-xl overflow-hidden'>\n\n                <h1 className=\"font-bold text-xl md:text-3xl mb-2 text-white\">{data.mdx.frontmatter.title}</h1>\n                <div className='text-white'>\n                  {React.Children.map(children, child => {\n                    if (React.isValidElement(child)) {\n                      return React.cloneElement(child, {\n                        components: {\n                          ...components,\n                          h1: (props) => <h1 className=\"text-4xl font-bold mt-4 mb-2\" {...props} />,\n                          h2: (props) => <h2 className=\"text-3xl font-bold mt-4 mb-2\" {...props} />,\n                          h3: (props) => <h3 className=\"text-2xl font-bold mt-4 mb-2\" {...props} />,\n                          h4: (props) => <h4 className=\"text-xl font-bold mt-4 mb-2\" {...props} />,\n                          h5: (props) => <h5 className=\"text-lg font-bold mt-4 mb-2\" {...props} />,\n                          h6: (props) => <h6 className=\"text-base font-bold mt-4 mb-2\" {...props} />,\n                          li: (props) => <li className=\"mb-2\" {...props} />,\n                          a: (props) => <a className=\"underline\" {...props} />\n                        }\n                      });\n                    }\n                    return child;\n                  })}\n\n                </div>\n\n\n              </div>\n\n            </div>\n\n\n          </div>\n\n\n\n\n\n\n        <Footer />\n        </div>\n        <div className=\"absolute bottom-0 w-full pointer-events-none\">\n          <img src={Bottom} alt=\"Bottom decoration\" className=\"w-full object-cover h-60\" />\n        </div>\n      </main>\n    )\n  }\n  \n\n  export const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}, frontmatter: { type: { eq: \"episode\" } }) {\n      frontmatter {\n        title\n        description\n        iframe\n      }\n    }\n  }`\n  \n\n  export default EpisodeTemplate","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","DynamicTemplate","_ref","data","children","frontmatter","mdx","type","BookTemplate","EpisodeTemplate","Head","_ref2","Seo","title","description","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","menuOpen","setMenuOpen","useState","toggleMenu","image","getImage","hero_image","className","dir","to","src","Arrow","alt","G","hero_image_alt","map","child","h1","h2","h3","h4","h5","h6","li","a","Bottom","dangerouslySetInnerHTML","__html","iframe","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}